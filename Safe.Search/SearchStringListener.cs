//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SearchString\SearchString.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SearchStringParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface ISearchStringListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SearchStringParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] SearchStringParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SearchStringParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] SearchStringParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TextWithoutField</c>
	/// labeled alternative in <see cref="SearchStringParser.part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextWithoutField([NotNull] SearchStringParser.TextWithoutFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TextWithoutField</c>
	/// labeled alternative in <see cref="SearchStringParser.part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextWithoutField([NotNull] SearchStringParser.TextWithoutFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TextWithField</c>
	/// labeled alternative in <see cref="SearchStringParser.part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextWithField([NotNull] SearchStringParser.TextWithFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TextWithField</c>
	/// labeled alternative in <see cref="SearchStringParser.part"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextWithField([NotNull] SearchStringParser.TextWithFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SearchStringParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterField([NotNull] SearchStringParser.FieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SearchStringParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitField([NotNull] SearchStringParser.FieldContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>OneWord</c>
	/// labeled alternative in <see cref="SearchStringParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOneWord([NotNull] SearchStringParser.OneWordContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OneWord</c>
	/// labeled alternative in <see cref="SearchStringParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOneWord([NotNull] SearchStringParser.OneWordContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SeveralWords</c>
	/// labeled alternative in <see cref="SearchStringParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeveralWords([NotNull] SearchStringParser.SeveralWordsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SeveralWords</c>
	/// labeled alternative in <see cref="SearchStringParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeveralWords([NotNull] SearchStringParser.SeveralWordsContext context);
}
